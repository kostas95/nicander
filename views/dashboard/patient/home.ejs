<style>
    .margin-right-20rem {
        margin-right: 20rem;
    }

    .margin-left-10rem {
        margin-left: 10rem;
    }

    .width-75vw {
        width: 75vw;
    }

    .flex-left {
        align-self: start;
    }

    .border-style {
        border-right: 5px solid #f8f9fa;
    }

    #searchbar-cont {
        position: relative;
    }

    #search-results {
        display: none;
        padding: 1rem;
        border-bottom: 1px solid #9e9e9e;
        /* border-left: 1px solid #9e9e9e; */
        /* border-right: 1px solid #9e9e9e; */
        position: absolute;
        top: 41px;
        left: 0;
        background-color: white;
        padding: 10px;
        max-height: 20vh;
        overflow: auto;
    }

    .search-results-items {
        width: 100%;
        cursor: pointer;
        padding: 0.5rem;
        color: #2771ad;
    }

    .search-results-items:hover {
        background-color: #f8f9fa;
    }

    .docInfo {
        margin: 0px 5px
    }

    .specialtyStyle {
        color: #9e9e9e;
        font-size: 12px;
    }

    .align-left {
        justify-content: flex-start !important;
        align-items: flex-start !important;
    }

    .appointment-content,
    .history-content,
    .requests-content,
    .cancelled-content,
    .content {
        background: #f2f1f1;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 4px;
        width: 40vw;
    }

    .min-height {
        min-height: 93px;
    }

    .border:nth-child(2) {
        border-left: 1px solid #cecdcd;
    }

    .border:nth-child(1) {
        align-items: flex-start;
    }

    .border {
        flex: 1;
    }

    #appointments-head,
    #history-head,
    #requests-head,
    #cancelled-head {
        margin-bottom: 20px;
    }

    .button {
        margin-bottom: 5px;
        font-size: 12px;
        width: 150px;
    }

    #name {
        color: #3498db;
        font-size: 18px;
        margin-bottom: 8px;
    }

    #specialty {
        margin-bottom: 5px;
        font-size: 15px;
    }

    .fa-smile {
        color: green;
    }

    .fa-frown {
        color: red;
    }

    #emergency, #adr {
        margin: 20px 0 0 0 !important;
        width: 50% !important;
    }

    #adr {
        margin-left: 10px !important;
    }

    @media only screen and (max-width: 767px) and (max-height: 1024px) {
        #main-container * {
            padding: 0;
            margin: 0;
        }

        #main-container {
            padding: 1rem 0.5rem !important;
        }

        .border-style {
            border: none;
            width: 100%;
            padding: 10px !important;
        }

        #main-container h1 {
            font-size: 1.5rem;
        }

        #main-container h1:first-child,
        #searchbar-cont {
            margin-bottom: 20px;
        }

        #specialties>* {
            padding: 5px !important;
        }

        .width-50,
        .width-75vw {
            width: 100% !important;
            border: none;
        }

        .align-left {
            align-items: center !important;
            justify-content: center !important;
        }

        #appointments-container>* {
            margin-bottom: 10px;
        }

        .appointment-content {
            width: 100%;
            flex-direction: column !important;
        }

        .appointment-content>div:nth-child(1) {
            border-bottom: 1px solid #9e9e9e;
        }

        .appointment-content>div:nth-child(2) {
            border: none;
        }

        .button {
            padding: 5px 15px !important;
        }

        .border-style {
            margin: 0;
        }

        footer {
            padding: 1rem !important;
        }

        #searchbar-cont, #vote {
            flex-direction: row !important;
        }

        #emergency-cont {
            flex-direction: row !important;
            margin: 20px 0;
        }

        #emergency-cont>.button {
            flex: 1;
            height: 38px;
            margin: 0 10px !important;
        }

        .search-results-items {
            padding: 5px 0 !important;
        }
    }
</style>

<div id='main-container' class="container padding-2rem">

    <div class="container border-style padding-2rem margin-right-20rem margin-left-10rem">
        <div class="container padding-2rem width-75vw ">
            <h1 class="h1 margin-bottom-2rem text-left flex-left">Welcome <%= username %></h1>
            <h1 class="h1 margin-bottom-1rem text-left flex-left">Get started now</h1>

            <div class="container flex-dir-row width-50 flex-left" id="searchbar-cont">
                <input type="text" class='searchbar  width-100'>
                <div class="arrow"><i class="fas fa-chevron-down"></i></div>
                <div class="container flex-dir-row width-100 flex-left" id="search-results">
                    <div class="container noselect" id="specialties">
                        <h2>Available specialties</h2>
                        <div class="container width-100" id="specialties-content"></div>
                    </div>
                    <div class="container" id="doctors">
                        <h2>Doctors</h2>
                        <div class="container" id="doctors-content"></div>
                    </div>
                </div>
            </div>
            <div class="container flex-dir-row flex-left width-50" id="emergency-cont">
                <button class="button" id="emergency">Emergency appointment</button>
                <button class="button" id="adr">ADR form submission</button>
            </div>

        </div>
        <div class="container padding-2rem width-75vw">
            <h1 class="h1 margin-bottom-1rem text-left flex-left">Future appointments</h1>
            <div class="container width-100 align-left" id="appointments-container">

            </div>
        </div>
    </div>
    <div class="container width-80 padding-2rem margin-top-2rem margin-right-20rem margin-left-10rem content"
        id="vote-area">
        <h1 class="big-h1 padding-1rem">Do you like Nicander?</h1>
        <div>If so, please give us a thumbs up! </div>
        <div class="container flex-dir-row width-100 padding-5px" id="vote">
            <i class="fas fa-thumbs-up fa-2x padding-1rem pointer" id="up"></i>
            <i class="fas fa-thumbs-down fa-2x padding-1rem pointer" id="down"></i>
        </div>
        <div id="msg" style="max-height: 10px;"></div>
    </div>
</div>
<script>
    let users = [];
    const id = '<%= id %>';

    //Fetch get doctors
    fetch("/getUsers/patient", {
        method: "post",
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },

        //make sure to serialize your JSON body
        body: JSON.stringify({
            usertype: 'doctor'
        })
    })
        .then(response => response.json())
        .then((body) => {
            body.forEach(element => {
                users.push(element)
            });
            users.sort(function (a, b) {
                if (a.specialty < b.specialty) { return -1; }
                if (a.specialty > b.specialty) { return 1; }
                return 0;
            })
        });


    const searchbar = document.querySelector('.searchbar')
    const searchresults = document.getElementById('search-results');
    const specialties = document.getElementById('specialties-content');
    const doctors = document.getElementById('doctors-content');
    const doctorsCont = document.getElementById('doctors');
    const specialtiesCont = document.getElementById('specialties');
    const appointments = document.querySelector('#appointments-container');
    let total = []


    searchbar.addEventListener('keyup', (e) => {

        //Make visibile doctors and specialties sections
        doctorsCont.style.display = 'block'
        specialtiesCont.style.display = 'block'

        //Check and set search results field display
        if (searchbar.value !== '') {
            // Initialize flag values for doctors and specialties search
            let s_found = 0, d_found = 0;
            let specialtiesArr = [];
            searchresults.style.display = 'block';

            //Remove all results from previous input value (specialties)
            specialties.innerHTML = '';
            //Remove all results from previous input value (doctors)
            doctors.innerHTML = '';

            //Remove all results from previous input value (when typing backspace or delete)
            if (event.key === "Backspace" || event.key === "Delete") {
                specialties.innerHTML = '';
                doctors.innerHTML = '';
            }

            // Check if any doctor name or specialty starts with the given input
            users.forEach(element => {

                //.search() method documentation
                //can be achieved also by using
                //.startsWith() method
                //https://www.w3schools.com/jsref/jsref_startswith.asp

                //Specialty
                if (element.specialty.toLowerCase().search(searchbar.value.toLowerCase()) === 0) {
                    //Create new results elements from new input value
                    if (!specialtiesArr.includes(element.specialty)) {
                        // console.log([a[ar]])
                        specialtiesArr.push(element.specialty)
                    }
                    s_found = 1;
                }
                //Doctor's Name
                let fullName = `${element.surname} ${element.name}`
                if (element.name.toLowerCase().search(searchbar.value.toLowerCase()) === 0 || element.surname.toLowerCase().search(searchbar.value.toLowerCase()) === 0 || fullName.toLowerCase().search(searchbar.value.toLowerCase()) === 0) {
                    //Create new results elements from new input value
                    createResult(doctors, element.name, element.surname, element.specialty, element._id)
                    d_found = 1;
                }
            })
            if (s_found === 1) {

                specialtiesArr.forEach((specialty) => {
                    createResult(specialties, specialty)
                })
            }
            //Display message when search unsuccessful (specialties)
            if (s_found === 0) {
                const result = document.createElement('div');
                result.innerText = 'No results found';
                specialties.appendChild(result);
            }
            //Display message when search unsuccessful (doctors)
            if (d_found === 0) {
                const result = document.createElement('div');
                result.innerText = 'No results found';
                doctors.appendChild(result);
            }
        } else {
            searchresults.style.display = 'none';
            specialties.innerHTML = ''
            doctors.innerHTML = ''
        }

    })

    let open_ = false;
    const arrow = document.querySelector('.arrow');
    arrow.addEventListener('click', () => {
        if (open_ === false) {
            let specialtiesArr = [];
            searchresults.style.display = 'block';
            doctorsCont.style.display = 'none'
            specialties.innerHTML = '';

            users.forEach(user => {
                if (!specialtiesArr.includes(user.specialty)) {
                    specialtiesArr.push(user.specialty);
                }
            })

            specialtiesArr.forEach(specialty => {
                createResult(specialties, specialty)
            })

            open_ = true;
        }
        else {
            searchresults.style.display = 'none';
            open_ = false;
        }
    })

    document.querySelector('#emergency').addEventListener('click', () => {
        fetch("/emergency/appointment/registered", {
            method: "post",
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },

            //make sure to serialize your JSON body
            body: JSON.stringify({
                id: id
            })
        })
            .then(response => response.json())
            .then((body) => {
                window.location.href = body.url
            });
    })

    document.querySelector('#adr').addEventListener('click', () => {
        window.location.href = '/dashboard/emergency/report'
    })

    fetch("/getAppointments/p", {
        method: "post",
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },

        //make sure to serialize your JSON body
        body: JSON.stringify({
            type: 'appointment',
            patient_id: id
        })
    })
        .then(response => response.json())
        .then((body) => {
            const appointmentsContainer = document.querySelector('#appointments-container');
            let count = 0;
            let futureAppointments = 0;
            if (body.appointments) {
                body.appointments.forEach(appointment => {
                    if (appointment.type === 'appointment') {
                        futureAppointments++
                    }
                })
            }

            if (body.result === 'success') {
                appointmentsContainer.innerHTML = `<div class='container padding-1rem'>You have ${futureAppointments} upcoming appointments</div>`
                body.appointments.sort(function (a, b) {
                    var c = new Date(a.timestamp);
                    var d = new Date(b.timestamp);
                    return d - c;
                }).forEach(appointment => {
                    if (count < 3) {
                        if (appointment.type === 'appointment') {
                            //Create container that contains the appointment info (doc info, date etc)
                            const appointmentElement = document.createElement('div');
                            appointmentElement.className = 'container flex-dir-row appointment-content';
                            appointmentElement.id = `${appointment._id}`

                            //Create left section of container
                            let appointmentSection = document.createElement('div');
                            appointmentSection.className = `container padding-left-right-12px min-height border`
                            appointmentSection.innerHTML = `
                            <a id='name' href='/profiles/${appointment.doctor.id}'>${appointment.doctor.name} ${appointment.doctor.surname}</a>
                            <div id='specialty' class='strong'>${appointment.doctor.specialty}</div>
                            `
                            //Append left section to appointment container
                            appointmentElement.appendChild(appointmentSection)

                            //Create middle section of container
                            appointmentSection = document.createElement('div');
                            appointmentSection.className = `container padding-left-right-12px min-height border flex-dir-row strong`
                            appointmentSection.innerHTML = `
                            <div><i class="fas fa-calendar-alt"></i></div>
                            <div class='font-12px'>${appointment.timestamp}</div>
                            `
                            //Append middle section to appointment container
                            appointmentElement.appendChild(appointmentSection)

                            appointments.appendChild(appointmentElement)

                            function createContainer() {
                                const cont = document.createElement('div');
                                cont.className = 'container';

                                return cont;
                            }

                            function createButton(id, innerText) {
                                const btn = document.createElement('button')
                                btn.className = 'button small'
                                btn.id = `${id}`
                                btn.innerText = `${innerText}`

                                return btn;
                            }

                        }
                    }
                    count++
                })

                const seeAppointments = document.createElement('button');
                seeAppointments.className = 'button';
                seeAppointments.addEventListener('click', () => {
                    window.location.href = '/dashboard/my-appointments'
                })
                seeAppointments.innerText = 'Go to my appointments';
                appointmentsContainer.appendChild(seeAppointments)
            } else {
                appointmentsContainer.innerHTML = `
                <div class="container appointment-content" >
                    <i class="fas fa-clock"></i>
                    <div class='padding-1rem'>There are no upcoming appointments at this moment.</div>
                </div>
                `
            }

        });


    function createResult(parent, resultValue, resultValue2, resultValue3, id) {
        if (resultValue2 && resultValue3 && id) {
            const result = document.createElement('div');
            result.innerHTML = `
                <div class='docInfo'>${resultValue} ${resultValue2}</div> <div class='docInfo specialtyStyle'>${resultValue3}</div>
            `;
            result.className = 'search-results-items text-center container flex-dir-row';
            result.addEventListener('click', () => {

                window.location.href = `/profiles/${id}`;

            })
            parent.appendChild(result);
        }
        else {
            const result = document.createElement('div');
            result.innerText = resultValue;
            result.className = ' search-results-items text-center container';
            result.addEventListener('click', () => {
                window.location.href = `/specialties/${resultValue}`;
            })
            parent.appendChild(result);
        }
    }

    document.querySelector('#vote').addEventListener('click', (e) => {
        if (e.target.id === 'up' || e.target.id === 'down') {
            fetch("/systemVote", {
                method: "post",
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },

                //make sure to serialize your JSON body
                body: JSON.stringify({
                    id: id,
                    vote: e.target.id
                })
            })
                .then(response => response.json())
                .then((body) => {

                    const msg = document.querySelector('#msg');
                    msg.className = 'container padding-1rem width-100';

                    if (e.target.id === 'up') {
                        document.querySelector('#down').style.color = 'rgb(109, 50, 109, 0.9)'
                        e.target.style.color = 'green'

                        msg.innerHTML = `${body.msg}<i class="fas fa-smile"></i>`
                        msg.style.color = 'green'
                    } else {
                        document.querySelector('#up').style.color = 'rgb(109, 50, 109, 0.9)'
                        e.target.style.color = 'red'

                        msg.innerHTML = `${body.msg}<i class="fas fa-frown"></i>`
                        msg.style.color = 'red'
                    }
                });
        }
    })


</script>