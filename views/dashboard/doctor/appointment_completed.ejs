<style>
    #chat-area,
    #diagnosis-area {
        height: 90vh;
        background-color: #ebebeb;
        border-radius: 5px;
        box-shadow: 0 0 29px 0 rgba(66, 66, 66, .13);
        justify-content: flex-start;
    }

    #chat-area {
        flex: 2;
    }

    #display-messages {
        flex: 15;
    }

    #text-area {
        flex: 1;
        justify-content: flex-start;
    }

    #textArea {
        resize: none;
        outline: none;
        line-height: 1.28;
        height: 3rem;
        border: none;
        padding-top: 10px;
        padding-bottom: 10px;
        width: 80%;
        font-size: 14px;
        font-family: 'Roboto', sans-serif;
    }

    #diagnosis-area {
        flex: 4;
    }

    .far:hover {
        opacity: 0.7;
    }

    .url {
        color: black;
        text-decoration: underline;
    }

    #file {
        display: none;
    }

    label {
        width: auto;
        margin: 0;
    }

    .padding-1rem {
        padding: 1rem !important;
    }

    .files-modal>div {
        align-items: flex-start;
        overflow: auto;
    }

    .file:nth-child(2n+1) {
        background-color: #ebebeb;
    }

    .file:hover {
        background-color: rgba(109, 50, 109, 0.452);
        ;
        cursor: pointer;
    }

    .file {
        width: 100%;
        align-items: flex-start;
    }

    textarea {
        max-height: 14vh;

    }

    textarea {
        padding: 1rem;
        outline: none;
        font-family: 'Roboto', sans-serif;
    }

    @media only screen and (max-width: 823px) and (max-height: 1024px) {
        #mob-wrap {
            flex-flow: column;
        }

        #chat-area {
            order: 2;
        }

        #diagnosis-area {
            order: 1;
        }

        textarea {
            width: 100%;
        }

        #submit_diagnosis {
            width: 150px;
        }

        .modal-content {
            justify-content: flex-start;
            align-items: flex-start;
        }

        .margin-left-right-10px {
            margin: 0;
            justify-content: center;
            align-items: center;
        }

        strong {
            text-align: center;
        }
    }
</style>

<div class="container width-100 padding-1rem flex-dir-row" id="mob-wrap">
    <!-- Chat Area -->
    <div class="container width-100 padding-1rem" id="chat-area">

        <!-- Area where messages are displayed -->
        <div class="container padding-1rem width-100" id="display-messages">

        </div>

        <div class="container flex-dir-row padding-5px" id="files">
            <div id="shared-files" class="pointer">Shared Files</div>
        </div>
    </div>

    <!-- Diagnosis Area -->
    <div class="container width-100" id="diagnosis-area">
        <!-- Appointment info -->
        <div class="container padding-5px width-100">
            <div class="container flex-dir-row width-100" id="info_wrapper">
                <div class="container padding-5px width-100 user_info" id="patient_info">

                </div>
                <div class="container padding-5px width-100 user_info" id="doctor_info">

                </div>
            </div>
            <div class="container padding-5px width-100 user_info" id="date_info">

            </div>
        </div>

        <!-- Diagnosis -->
        <div class="container padding-1rem width-100" id="diagnosis-wrap">
            <h1 class="h1">Doctor diagnosis</h1>
            <h1>Please enter an official diagnosis to this appointment</h1>
            <div class="container padding-1rem width-100" id="diagnosis">
                <textarea name="diagnosis" id="diagnosis_txt" placeholder="Type your diagnosis..."></textarea>
            </div>
            <div class="container padding-1rem width-100" id="treatment">
                <textarea name="treatment" id="treatment_txt" placeholder="Type the suggested treatment..."></textarea>
            </div>
            <div class="container padding-1rem width-100" id="comments">
                <textarea name="comments" id="comments_txt" placeholder="Add further comments..."></textarea>
            </div>
            <button class="button" id="submit_diagnosis">Submit diagnosis</button>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js"
    integrity="sha256-/H4YS+7aYb9kJ5OKhFYPUjSJdrtV6AeyJOtTkw6X72o=" crossorigin="anonymous"></script>
<script>

    const appointment_id = '<%= appointment_id %>';
    const user_id = '<%= id %>';
    let patient, doctor


    const diagnosisArea = document.querySelector('#diagnosis-area'), chatArea = document.querySelector('#chat-area');

    const textArea = document.querySelector('#textArea');
    const msgForm = document.querySelector('#wrap-textarea-cont');
    const displayMessages = document.querySelector('#display-messages');
    const filter = document.querySelector('#filter')
    let client = {}
    let timesConnected;
    const patientInfo = document.querySelector('#patient_info'), doctorInfo = document.querySelector('#doctor_info'), dateInfo = document.querySelector('#date_info')

    const submitDiagnosis = document.querySelector('#submit_diagnosis')
    const diagnosis = document.querySelector('#diagnosis_txt')
    const treatment = document.querySelector('#treatment_txt')
    const comments = document.querySelector('#comments_txt')

    setTimeout(() => {
        fetch("/getAppointments/1", {
            method: "post",
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },

            //make sure to serialize your JSON body
            body: JSON.stringify({
                appointment_id: appointment_id,
                'user.id': user_id,
                type: 'patient'
            })
        })
            .then(response => response.json())
            .then((body) => {
                patient = body.patient
                doctor = body.doctor

                body.chat.forEach(data => {
                    createMessageBubble(data, data.from);
                });

                patientInfo.innerHTML = `
                <div>Patient</div> 
                <div>${body.patient.name} ${body.patient.surname}</div>`;

                doctorInfo.innerHTML = `
                <div>Doctor</div> 
                <div>Dr. ${body.doctor.name} ${body.doctor.surname}</div>`;

                dateInfo.innerHTML = `
                <div>Date</div> 
                <div>${body.timestamp}</div>`;

                if (body.diagnosis.diagnosis || body.diagnosis.comments || body.diagnosis.treatment) {
                    diagnosis.value = body.diagnosis.diagnosis
                    comments.value = body.diagnosis.comments
                    treatment.value = body.diagnosis.treatment
                }

                //Submit diagnosis data

                submitDiagnosis.addEventListener('click', (e) => {
                    const diagnosisValue = diagnosis.value,
                        treatmentValue = treatment.value,
                        commentsValue = comments.value

                    fetch("/diagnosis", {
                        method: "post",
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },

                        //make sure to serialize your JSON body
                        body: JSON.stringify({
                            diagnosis: diagnosisValue,
                            treatment: treatmentValue,
                            comments: commentsValue,
                            appointment_id: body._id
                        })
                    })
                        .then(response => response.json())
                        .then((body) => {
                            if (!document.querySelector('#msg')) {
                                const msg = document.createElement('div');
                                msg.id = 'msg';
                                msg.innerText = `${body.msg}`;
                                msg.className = 'padding-5px'
                                msg.style.color = 'green'
                                document.querySelector('#diagnosis-wrap').appendChild(msg)
                            }
                        });
                })
            });
    }, 100);

    //Share files event listener
    document.querySelector('#shared-files').addEventListener('click', (e) => {
        if (document.querySelector('#dot')) {
            document.querySelector('#dot').remove()
        }
        fetch("/getFiles", {
            method: "post",
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },

            //make sure to serialize your JSON body
            body: JSON.stringify({
                appointment_id: appointment_id
            })
        })
            .then(response => response.json())
            .then((body) => {
                //Create modal
                const modal = document.createElement('div');
                modal.className = 'modal container';

                const modalContent = document.createElement('div');
                modalContent.className = 'modal-content container files-modal';
                const cont = document.createElement('div');
                cont.className = 'container width-100 padding-1rem';
                cont.id = 'files-area'
                modalContent.appendChild(cont)
                if (!body.err) {
                    body.sort(function (a, b) {
                        var c = new Date(a.uploadDate);
                        var d = new Date(b.uploadDate);
                        return d - c;
                    }).forEach(file => {
                        const elemCont = document.createElement('form');
                        elemCont.method = "get";
                        elemCont.className = 'container file'
                        elemCont.id = file._id
                        elemCont.target = 'hiddenFrame'
                        elemCont.action = `/download/${file.filename}`
                        elemCont.addEventListener('click', e => {
                            elemCont.submit()
                        })
                        if (file.contentType.includes('image')) {
                            elemCont.innerHTML = `
                        <div class='container flex-dir-row padding-5px'>
                            <div class='margin-left-right-10px padding-5px'>
                                <i class="far fa-file-image"></i>    
                            </div>    
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Filename: </strong>
                                <span>${file.filename}</span>
                            </div>
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Date: </strong>
                                <span>${file.uploadDate.substring(8, 10)}-${file.uploadDate.substring(5, 7)}-${file.uploadDate.substring(0, 4)},</div><div class='small-date'>${file.uploadDate.substring(11, 16)}</span>
                            </div>
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Sent by: </strong>
                                <span>${file.metadata.user_type}</span>
                            </div>
                        </div>
                        `
                        } else {
                            elemCont.innerHTML = `
                        <div class='container flex-dir-row padding-5px' id='${file._id}'>
                            <div class='margin-left-right-10px padding-5px'>
                                <i class="far fa-file-alt"></i>    
                            </div>    
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Filename: </strong>
                                <span>${file.filename}</span>
                            </div>
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Date: </strong>
                                <span>${file.uploadDate.substring(8, 10)}-${file.uploadDate.substring(5, 7)}-${file.uploadDate.substring(0, 4)},</div><div class='small-date'>${file.uploadDate.substring(11, 16)}</span>
                            </div>
                            <div class='margin-left-right-10px padding-5px'>
                                <strong>Sent by: </strong>
                                <span>${file.metadata.user_type}</span>
                            </div>
                        </div>
                        `
                        }
                        cont.appendChild(elemCont)
                    })
                }
                //Append modal
                modal.appendChild(modalContent);
                document.querySelector('body').appendChild(modal)

                document.querySelector('body').addEventListener('click', (e) => {
                    if (e.target.classList.contains('fas') || e.target.classList.contains('modal'))
                        modal.remove()
                })
            });
    })

    function createMessageBubble(data, from) {
        //Create a div container for the message data
        const cont = document.createElement('div');
        cont.className = `container padding-5px message-bubble ${from}`;

        const contName = document.createElement('div');
        if (from === 'patient') {
            contName.innerText = `You`
        } else if (from === 'doctor') {
            contName.innerText = `Dr. ${data.doctor.name} ${data.doctor.surname}`
        }
        contName.className = 'container width-100'
        contName.id = 'chat-name'
        cont.appendChild(contName)

        const cont2 = document.createElement('div');
        cont2.className = `container flex-dir-row padding-5px width-100`;
        cont.appendChild(cont2);

        const contMsg = document.createElement('div');

        //Decrypt message and turn it to readable string
        data.message = CryptoJS.AES.decrypt(data.message.toString(), "Secret Passphrase").toString(CryptoJS.enc.Utf8)

        //Check if message is link
        data.message = linkify(data.message)
        contMsg.innerHTML = `${data.message}`;
        contMsg.id = 'message-content'
        cont2.appendChild(contMsg);

        const contDateTime = document.createElement('div');
        contDateTime.id = 'datetime-content'
        contDateTime.innerText = `${data.date} ${data.time}
        `;
        cont2.appendChild(contDateTime);

        displayMessages.appendChild(cont)

        scrollBarBottom()
    }

    function scrollBarBottom() {
        // Scrollbar of display messages section always to bottom
        displayMessages.scrollTop = displayMessages.scrollHeight - displayMessages.clientHeight;
    }

    //URLify
    var urlRegex = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
    function linkify(text) {
        return text.replace(urlRegex, function (url) {
            return '<a href="' + url + '" target="_blank" class="url">' + url + '</a>';
        });
    }

    function getDate() {
        var today = new Date();
        let yy = today.getFullYear(),
            mm = today.getMonth() + 1,
            dd = today.getDate()

        if (mm < 10) {
            mm = `0${mm}`
        }
        if (dd < 10) {
            dd = `0${dd}`
        }

        return `${dd}-${mm}-${yy}`;
    }
</script>