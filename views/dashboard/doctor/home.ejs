<style>
    .margin-right-20rem {
        margin-right: 20rem;
    }

    .margin-left-10rem {
        margin-left: 10rem;
    }

    .width-75vw {
        width: 75vw;
    }

    .flex-left {
        align-self: start;
    }

    .border-style {
        border-right: 5px solid #f8f9fa;
    }

    #searchbar-cont {
        position: relative;
    }

    #search-results {
        display: none;
        padding: 1rem;
        border-bottom: 1px solid #9e9e9e;
        /* border-left: 1px solid #9e9e9e; */
        /* border-right: 1px solid #9e9e9e; */
        position: absolute;
        top: 41px;
        left: 0;
        background-color: white;
        padding: 10px;
        max-height: 20vh;
        overflow: auto;
    }

    .search-results-items {
        width: 100%;
        cursor: pointer;
        padding: 0.5rem;
        color: #2771ad;
    }

    .search-results-items:hover {
        background-color: #f8f9fa;
    }

    .docInfo {
        margin: 0px 5px
    }

    .specialtyStyle {
        color: #9e9e9e;
        font-size: 12px;
    }

    .align-left {
        justify-content: flex-start !important;
        align-items: flex-start !important;
    }

    .appointment-content,
    .history-content,
    .requests-content,
    .cancelled-content,
    .content {
        background: #f2f1f1;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 4px;
        width: 40vw;
    }

    .min-height {
        min-height: 93px;
    }

    .border:nth-child(2) {
        border-left: 1px solid #cecdcd;
    }

    .border:nth-child(1) {
        align-items: flex-start;
    }

    .border {
        flex: 1;
    }

    #appointments-head,
    #history-head,
    #requests-head,
    #cancelled-head {
        margin-bottom: 20px;
    }

    .button {
        margin-bottom: 5px;
        font-size: 12px;
        width: 150px;
    }

    #name {
        color: #3498db;
        font-size: 18px;
        margin-bottom: 8px;
    }

    #specialty {
        margin-bottom: 5px;
        font-size: 15px;
    }

    .fa-smile {
        color: green;
    }

    .fa-frown {
        color: red;
    }
</style>

<div class="container padding-2rem">

    <div class="container border-style padding-2rem margin-right-20rem margin-left-10rem">
        <div class="container padding-2rem width-75vw ">
            <h1 class="h1 margin-bottom-1rem text-left flex-left">Welcome <%= username %></h1>
        </div>
        <div class="container padding-2rem width-75vw">
            <h1 class="h1 margin-bottom-1rem text-left flex-left">Future appointments</h1>
            <div class="container width-100 align-left" id="appointments-container">

            </div>
        </div>
    </div>
    <div class="container width-80 padding-2rem margin-top-2rem margin-right-20rem margin-left-10rem content"
        id="vote-area">
        <h1 class="big-h1 padding-1rem">Do you like Nicander?</h1>
        <div>If so, please give us a thumbs up! </div>
        <div class="container flex-dir-row width-100 padding-5px" id="vote">
            <i class="fas fa-thumbs-up fa-2x padding-1rem pointer" id="up"></i>
            <i class="fas fa-thumbs-down fa-2x padding-1rem pointer" id="down"></i>
        </div>
        <div id="msg" style="max-height: 10px;"></div>
    </div>
</div>
<script>
    let users = [];
    const id = '<%= id %>';
    console.log(id)
    const appointments = document.querySelector('#appointments-container');
    let total = []


    fetch("/getAppointments/d", {
        method: "post",
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },

        //make sure to serialize your JSON body
        body: JSON.stringify({
            type: 'appointment',
            doctor_id: id
        })
    })
        .then(response => response.json())
        .then((body) => {
            const appointmentsContainer = document.querySelector('#appointments-container');
            let count = 0;

            if (body.result === 'success') {
                appointmentsContainer.innerHTML = `<div class='container padding-1rem'>You have ${body.appointments.length} upcoming appointments</div>`
                body.appointments.sort(function (a, b) {
                    var c = new Date(a.timestamp);
                    var d = new Date(b.timestamp);
                    return d - c;
                }).forEach(appointment => {
                    if (count < 3) {
                        if (appointment.type === 'appointment') {
                            //Create container that contains the appointment info (doc info, date etc)
                            const appointmentElement = document.createElement('div');
                            appointmentElement.className = 'container flex-dir-row appointment-content';
                            appointmentElement.id = `${appointment._id}`

                            //Create left section of container
                            let appointmentSection = document.createElement('div');
                            appointmentSection.className = `container padding-left-right-12px min-height border`
                            appointmentSection.innerHTML = `
                            <a id='name' href='/profiles/${appointment.doctor.id}'>${appointment.doctor.name} ${appointment.doctor.surname}</a>
                            <div id='specialty' class='strong'>${appointment.doctor.specialty}</div>
                            `
                            //Append left section to appointment container
                            appointmentElement.appendChild(appointmentSection)

                            //Create middle section of container
                            appointmentSection = document.createElement('div');
                            appointmentSection.className = `container padding-left-right-12px min-height border flex-dir-row strong`
                            appointmentSection.innerHTML = `
                            <div><i class="fas fa-calendar-alt"></i></div>
                            <div class='font-12px'>${appointment.timestamp}</div>
                            `
                            //Append middle section to appointment container
                            appointmentElement.appendChild(appointmentSection)

                            appointments.appendChild(appointmentElement)

                            function createContainer() {
                                const cont = document.createElement('div');
                                cont.className = 'container';

                                return cont;
                            }

                            function createButton(id, innerText) {
                                const btn = document.createElement('button')
                                btn.className = 'button small'
                                btn.id = `${id}`
                                btn.innerText = `${innerText}`

                                return btn;
                            }

                        }
                    }
                    count++
                })

                const seeAppointments = document.createElement('button');
                seeAppointments.className = 'button';
                seeAppointments.addEventListener('click', () => {
                    window.location.href = '/dashboard/my-appointments'
                })
                seeAppointments.innerText = 'Go to my appointments';
                appointmentsContainer.appendChild(seeAppointments)
            } else {
                appointmentsContainer.innerHTML = `
                <div class="container appointment-content" >
                    <i class="fas fa-clock"></i>
                    <div class='padding-1rem'>There are no upcoming appointments at this moment.</div>
                </div>
                `
            }

        });


    function createResult(parent, resultValue, resultValue2, resultValue3, id) {
        if (resultValue2 && resultValue3 && id) {
            const result = document.createElement('div');
            result.innerHTML = `
                <div class='docInfo'>${resultValue} ${resultValue2}</div> <div class='docInfo specialtyStyle'>${resultValue3}</div>
            `;
            result.className = 'search-results-items text-center container flex-dir-row';
            result.addEventListener('click', () => {

                window.location.href = `/profiles/${id}`;

            })
            parent.appendChild(result);
        }
        else {
            const result = document.createElement('div');
            result.innerText = resultValue;
            result.className = ' search-results-items text-center container';
            result.addEventListener('click', () => {
                window.location.href = `/specialties/${resultValue}`;
            })
            parent.appendChild(result);
        }
    }

    document.querySelector('#vote').addEventListener('click', (e) => {
        if (e.target.id === 'up' || e.target.id === 'down') {
            fetch("/systemVote", {
                method: "post",
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },

                //make sure to serialize your JSON body
                body: JSON.stringify({
                    id: id,
                    vote: e.target.id
                })
            })
                .then(response => response.json())
                .then((body) => {

                    const msg = document.querySelector('#msg');
                    msg.className = 'container padding-1rem width-100';

                    if (e.target.id === 'up') {
                        document.querySelector('#down').style.color = 'rgb(109, 50, 109, 0.9)'
                        e.target.style.color = 'green'

                        msg.innerHTML = `${body.msg}<i class="fas fa-smile"></i>`
                        msg.style.color = 'green'
                    } else {
                        document.querySelector('#up').style.color = 'rgb(109, 50, 109, 0.9)'
                        e.target.style.color = 'red'

                        msg.innerHTML = `${body.msg}<i class="fas fa-frown"></i>`
                        msg.style.color = 'red'
                    }
                });
        }
    })

</script>